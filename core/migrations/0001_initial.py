# Generated by Django 5.2.5 on 2025-09-02 14:42

from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="EarlyAccessSignup",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("phone", models.CharField(max_length=20)),
                ("email", models.EmailField(max_length=254)),
                ("area", models.CharField(max_length=50)),
                ("primary_issue", models.CharField(max_length=50)),
                ("likelihood_rating", models.IntegerField(help_text="1-10 scale")),
                ("wants_newsletter", models.BooleanField(default=False)),
                ("wants_beta_testing", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                ("user_agent", models.TextField(blank=True)),
            ],
            options={
                "verbose_name": "Early Access Signup",
                "verbose_name_plural": "Early Access Signups",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="QuestionnaireResponse",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "fct_connection",
                    models.CharField(help_text="live, work, study, no", max_length=20),
                ),
                ("area", models.CharField(blank=True, max_length=50)),
                ("age_range", models.CharField(blank=True, max_length=10)),
                ("occupation", models.CharField(blank=True, max_length=30)),
                ("education", models.CharField(blank=True, max_length=30)),
                (
                    "civic_issues",
                    models.JSONField(
                        default=list, help_text="Array of experienced issues"
                    ),
                ),
                (
                    "issue_impact",
                    models.CharField(blank=True, help_text="1-5 scale", max_length=2),
                ),
                ("tried_reporting", models.CharField(blank=True, max_length=20)),
                (
                    "reporting_methods",
                    models.JSONField(
                        default=list, help_text="How they tried to report"
                    ),
                ),
                ("reporting_outcome", models.CharField(blank=True, max_length=30)),
                (
                    "government_satisfaction",
                    models.CharField(blank=True, help_text="1-10 scale", max_length=2),
                ),
                ("platform_interest", models.CharField(blank=True, max_length=20)),
                ("primary_reason", models.CharField(blank=True, max_length=30)),
                (
                    "concerns",
                    models.JSONField(default=list, help_text="Platform concerns"),
                ),
                ("usage_frequency", models.CharField(blank=True, max_length=20)),
                ("platform_preference", models.CharField(blank=True, max_length=20)),
                ("premium_willingness", models.CharField(blank=True, max_length=20)),
                ("fair_price", models.CharField(blank=True, max_length=20)),
                (
                    "recommendation_likelihood",
                    models.CharField(blank=True, help_text="1-10 scale", max_length=2),
                ),
                (
                    "recommend_to",
                    models.JSONField(default=list, help_text="Who they'd recommend to"),
                ),
                ("ambassador_interest", models.CharField(blank=True, max_length=20)),
                (
                    "update_preferences",
                    models.JSONField(default=list, help_text="How to receive updates"),
                ),
                ("excitement_factor", models.TextField(blank=True, max_length=200)),
                ("biggest_worry", models.TextField(blank=True, max_length=200)),
                ("perfect_feature", models.TextField(blank=True, max_length=150)),
                ("additional_comments", models.TextField(blank=True, max_length=300)),
                (
                    "wants_launch_notification",
                    models.CharField(blank=True, max_length=20),
                ),
                (
                    "research_interests",
                    models.JSONField(
                        default=list, help_text="Beta testing, focus groups, etc"
                    ),
                ),
                ("phone", models.CharField(blank=True, max_length=20)),
                ("email", models.EmailField(blank=True, max_length=254)),
                ("preferred_contact", models.CharField(blank=True, max_length=20)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                ("user_agent", models.TextField(blank=True)),
                ("time_spent_seconds", models.IntegerField(blank=True, null=True)),
            ],
            options={
                "verbose_name": "Questionnaire Response",
                "verbose_name_plural": "Questionnaire Responses",
                "ordering": ["-created_at"],
            },
        ),
    ]
